{
  "title": "ROS Meta-Category",
  "description": "Meta-category definition for organizing ROS algorithms and modules",
  "type": "object",
  "properties": {
    "id": {
      "type": "string",
      "description": "Unique identifier for the meta-category"
    },
    "name": {
      "type": "string",
      "description": "Human-readable name of the meta-category"
    },
    "description": {
      "type": "string",
      "description": "Detailed description of the meta-category scope and purpose"
    },
    "icon": {
      "type": "string",
      "description": "Icon identifier for UI representation"
    },
    "color": {
      "type": "string",
      "description": "Primary color for UI representation (hex code)"
    },
    "scope": {
      "type": "string",
      "description": "Scope definition and boundaries of the meta-category",
      "enum": ["core", "advanced", "experimental", "deprecated"]
    },
    "hierarchy": {
      "type": "object",
      "properties": {
        "level": {
          "type": "integer",
          "minimum": 1,
          "maximum": 5,
          "description": "Hierarchy level (1 = top level, 5 = most specific)"
        },
        "parent": {
          "type": "string",
          "description": "Parent meta-category ID (if applicable)"
        },
        "children": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Child meta-category IDs"
        }
      }
    },
    "classification": {
      "type": "object",
      "properties": {
        "primaryFunction": {
          "type": "string",
          "description": "Primary function of algorithms in this category"
        },
        "complexity": {
          "type": "string",
          "enum": ["basic", "intermediate", "advanced", "expert"],
          "description": "Typical complexity level of algorithms in this category"
        },
        "useCase": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Common use cases for this category"
        },
        "robotType": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Robot types that commonly use this category"
        }
      }
    },
    "taxonomy": {
      "type": "object",
      "properties": {
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Keywords for search and categorization"
        },
        "aliases": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Alternative names for this category"
        },
        "relatedCategories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Related meta-category IDs"
        }
      }
    },
    "constraints": {
      "type": "object",
      "properties": {
        "rosVersion": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Supported ROS versions"
        },
        "hardwareRequirements": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Hardware requirements for algorithms in this category"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "External dependencies required for this category"
        }
      }
    },
    "metadata": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp"
        },
        "version": {
          "type": "string",
          "description": "Schema version"
        },
        "maintainer": {
          "type": "string",
          "description": "Maintainer information"
        }
      }
    }
  },
  "required": ["id", "name", "description", "scope", "hierarchy", "classification", "taxonomy"]
} 